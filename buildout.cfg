# This buildout can be used to obtain a complete test system from scratch:
#
# Use it like this:
#
#    virtualenv .
#    ./bin/pip install zc.buildout
#    bin/buildout

[buildout]
extends = http://dist.plone.org/release/4.3.4/versions.cfg
versions = versions
develop = .

zeoserver-address = 8100
zeoclient-address = 8080
user = admin:adminsecret

parts =
    lxml
    omelette
    zeoserver
    zeoclient
    test
    robot
    i18ndude
    update_translations

eggs =
    bika.lims
    i18ndude
    lxml
    zest.releaser

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml==2.3.6
force = false
static-build = true

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeoserver-address}
var = var
blob-storage = var/blobstorage
zserver-threads = 1
zeo-log     = var/zeoserver.log
pid-file    = var/zeoserver.pid
socket-name = var/zeo.zdsock

[zeoclient]
recipe = plone.recipe.zope2instance
var = var
blob-storage = var/blobstorage
zeo-address = ${buildout:zeoserver-address}
http-address = ${buildout:zeoclient-address}
user = ${buildout:user}
resources = ${buildout:directory}/resources
locales = ${buildout:directory}/locales
eggs = ${buildout:eggs}
zeo-client = true
shared-blob = on
http-fast-listen = off
event-log = var/zeoclient-event.log
z2-log    = var/zeoclient-Z2.log
pid-file  = var/zeoclient.pid
lock-file = var/zeoclient.lock

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs = bika.lims [test]

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    plone.app.robotframework

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[update_translations]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/update_translations
input = inline:
    #!/bin/sh
    # Generated by buildout from bika.lims/buildout.cfg
    # Allows manual.pot to override 'bika' and 'plone' domains.
    #
    echo did you tx pull? <enter>
    read
    #
    I18NDUDE=/home/rockfruit/projects/BikaUW/bin/i18ndude
    LOCALES=/home/rockfruit/projects/BikaUW/src/bika.uw/bika/uw/locales
    cd $LOCALES
    #
    MANUALPOT=$LOCALES/manual.pot
    BIKAPOT=/home/rockfruit/projects/BikaUW/src/bika.lims/bika/lims/locales/bika.pot
    PLONEPOT=/home/rockfruit/projects/BikaUW/../buildout-cache/eggs/plone.app.locales-4.3.7-py2.7.egg/plone/app/locales/locales/plone.pot
    #
    msgcat --strict --use-first $MANUALPOT $BIKAPOT > bika.pot
    $I18NDUDE sync --pot bika.pot */LC_MESSAGES/bika.po
    #
    msgcat --strict --use-first $MANUALPOT $PLONEPOT > plone.pot
    $I18NDUDE sync --pot plone.pot */LC_MESSAGES/plone.po
    #
    for po in `find . -name "*.po"`; do msgfmt -o `dirname $po`/`basename $po .po`.mo $po; done
    rm bika.pot plone.pot
    #
    ### Transifex
    echo eho did you \"tx push -s -t\"? <enter>
    read
mode = 755

[versions]
zc.buildout=2.3.1
setuptools=15.2
